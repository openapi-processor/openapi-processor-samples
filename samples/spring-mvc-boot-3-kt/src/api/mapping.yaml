openapi-processor-mapping: v9

options:
  # the root package of the generated interfaces/model. The package folder tree will be created
  # inside {targetDir} configured in the build.gradle file. The generated interfaces and models
  # will be placed into the "api" and "model" subpackages of packageName:
  #  - interfaces => "${packageName}.api"
  #  - models => "${packageName}.model"
  package-name: io.openapiprocessor.samples

  # target-dir options
  target-dir:
    # add src/resource directories to target-dir
    layout: standard

  # create property file with server/url path (requires standard target-dir layout)
  base-path:
    server-url: 0
    profile-name: api.properties

  # generate javadoc from OpenAPI description properties
  javadoc: true

  # run the generated code through a code formatter
  # see gradle.properties to fix java 16+ errors.
  format-code: true

  # use bean validations with jakarta package name
  bean-validation: jakarta

  # use java records instead of pojos
  model-type: record

map:
  types:
    - type: string:uuid => java.util.UUID
    - type: Foo @ io.openapiprocessor.samples.FooAnnotation
    - type: Bar @ io.openapiprocessor.samples.BarAnnotation
#    - type: Bar => io.openapiprocessor.MappedBar

    - type: Pageable => org.springframework.data.domain.Pageable
    - type: BarPage => org.springframework.data.domain.Page<{package-name}.model.Bar>
